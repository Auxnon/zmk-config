/* Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
	time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp F                            &kp P     &kp G          &kp J      &kp L   &kp U                            &kp Y    &kp SEMI  &kp BSPC
&kp ESC    &kp A  &kp R  &kp S                            &kp T     &kp D          &kp H      &kp N   &kp E                            &kp I    &kp O     &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C                            &kp V     &kp B          &kp K      &kp M   &kp COMMA                        &kp DOT  &kp FSLH  &kp GRAVE
                         &mt LEFT_SHIFT LEFT_PARENTHESIS  &kp LGUI  &lt 1 SPACE    &lt 2 RET  &tog 6  &mt RIGHT_ALT RIGHT_PARENTHESIS
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &trans    &trans     &trans          &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N0         &trans
&trans  &kp N4  &kp N5  &kp N6  &kp N0    &kp DOT    &kp MINUS       &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH  &kp GRAVE
&trans  &kp N7  &kp N8  &kp N9  &kp HOME  &kp END    &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE       &kp TILDE
                        &trans  &trans    &mo 3      &mo 3           &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_SEL 0  &kp EXCL       &kp AT           &kp HASH   &bt BT_SEL 1   &bt BT_SEL 2        &kp CARET       &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans     &trans
&trans        &kp DOLLAR     &kp PERCENT      &kp CARET  &trans         &trans              &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW          &kp RIGHT              &mkp LCLK  &mkp RCLK
&trans        &kp AMPERSAND  &kp KP_MULTIPLY  &trans     &kp LESS_THAN  &kp GREATER_THAN    &mmv MOVE_LEFT  &kp COLON  &mmv MOVE_UP          &mmv MOVE_RIGHT        &mkp LCLK  &mkp RCLK
                                              &trans     &trans         &mo 3               &mo 3           &trans     &trans
            >;
        };

        extra_layer {
            bindings = <
&kp F1       &kp F2  &kp F3  &kp F4  &kp F4  &kp F6               &kp F7     &kp F8     &kp F9     &kp F10  &kp F11  &kp F12
&bt BT_CLR   &trans  &trans  &trans  &trans  &trans               &trans     &kp PG_DN  &kp PG_UP  &trans   &trans   &trans
&bootloader  &trans  &trans  &trans  &trans  &kp LC(LS(SPACE))    &trans     &trans     &trans     &trans   &trans   &bootloader
                             &trans  &trans  &kp SPACE            &kp SPACE  &trans     &tog 4
            >;
        };

        game_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R    &kp T        &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F    &kp G        &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C      &kp V    &kp B        &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LSHFT  &lt 5 I  &kp SPACE    &kp RCTRL  &kp RALT  &tog 4
            >;
        };

        game_layer2 {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3     &kp N4   &kp N5       &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp M      &kp N6  &kp N7  &kp N8     &kp N9   &kp N0       &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp N      &kp J   &kp K   &kp L      &kp U    &kp P        &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LSHFT  &lt 5 I  &kp SPACE    &kp RCTRL  &kp RALT  &tog 4
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans        &trans           &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp UP    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK       &mkp RCLK       &trans        &kp LEFT         &kp DOWN  &kp RIGHT
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };
    };
};
